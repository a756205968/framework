1.应用在javaee三层中dao层框架
2.在dao层实现对数据库的crud操作，是对jdbc、sql的封装
3.开源的轻量级的框架
orm思想（对象关系映射）——object relational mapping
    使用orm思想对数据库进行crud操作
	（1）让实体类和数据库表进行一一对应关系
	         实体类首先和表对应		//类名对应表名
			 实体类属性和表字段对应	//属性对应字段
	（2）不需要直接操作数据库表，直接操作表对应实体类对象
使用
    创建实体类对象
	    session.save(对象);	//把数据插入表
	
入门
    搭建环境
	1.导入jar包，required和jpa里的包，（日志信息jar包）、MySQL驱动包		//把所有包都复制到一个文件
	2.创建实体类，可以自动建表
	3.配置实体类和表的一一对应关系（映射），用配置文件实现
		（1）创建一个xml格式的配置文件——名称和位置没有固定要求，一般在所在实体类包创建，命名为实体类名字.hbm.xml
		（2）引入xml约束，直接去dtd文件下复制第一段约束——			//hibernate-mapping-3.0.dtd中
				<!DOCTYPE hibernate-mapping PUBLIC 
				"-//Hibernate/Hibernate Mapping DTD 3.0//EN"
				"http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd">
		   <hibernate-mapping>				//根标签
				<class name="" table="">	//配置类和表对应,name是实体类的全路径（包名+类名），table是表名称
				
					<id name="" column="">  //id为唯一字段，相当于主键，name为实体类id属性的名称，column为表的字段的名称
						<generator class="native"></generator>	//设置主键的增长值，native为自动增长
					</id>
					
					//其他属性和字段配置
					<property name="" column="">	//name为实体类属性的名称，column为表的字段的名称，有几个写几个property标签
					</property>
				</class>				
				
		   </hibernate-mapping>
	    （3）创建核心配置文件，名称和位置必须固定
				位置必须在src下
				名称必须为hibernate.cfg.xml
			引入dtd约束					//hibernate-configuration-3.0.dtd中
				<!DOCTYPE hibernate-configuration PUBLIC
				"-//Hibernate/Hibernate Configuration DTD 3.0//EN"
				"http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd">
			<hibernate-configuration>
			
				<session-factory>				//需要的值去hibernate.properties中查找
				//配置数据库信息	必须
					<property name="connection.driver_class">oracle.jdbc.driver.OracleDriver</property>
					<property name="hibernate.connection.username">system</property>
					<property name="hibernate.connection.password">root</property>
					<property name="hibernate.connection.url">jdbc:oracle:thin:@localhost:1521:orcl</property>
				//配置hibernate信息		可选
					<property name="hibernate.show_sql">true</property>			//控制台输出底层sql
					<property name="hibernate.format_sql">true</property>		//格式化sql语句，分行显示
					<property name="hibernate.hbm2ddl.auto">update</property>	//用的最多的就是update，可以自动创建表
					<property name="hibernate.dialect">org.hibernate.dialect.Oracle10gDialect</property>	//配置数据库的方言，让框架识别不同数据库的不同关键字
				//配置映射文件信息	必须
					<mapping resource="src下面User.hbm.xml文件的路径，与上面区别为使用.这使用/"></mapping>	//可以按住ctrl，然后点击鼠标左键，看是否跳转，验证正确性
				</session-factory>

			</hibernate-configuration>
			
	操作步骤		//只有第五步有变化
		1.加载hibernate核心配置文件
			Configuration cfg=new Configuration();
			cfg.configure();
		2.创建SessionFactory对象
			SessionFactory sessionFactory=cfg.buildSessionFactory();
		3.使用SessionFactory对象创建Session
			Session session=sessionFactory.openSession();
		4.开启事务
			Transaction tx=session.beginTransaction();
		5.写具体crud操作
			User user=new User();
			user.setUsername("小王");
			user.setPassword("250");
			user.setAddress("日本");
			session.save(user);
		6.提交事务
			tx.commit();
		7.关闭资源
			session.close();
			sessionFactory.close();
			
	核心API讲解
		Configuration
			Configuration cfg=new Configuration();
			cfg.configure();
			1.到src下面找到名字为hibernate.cfg.xml的配置文件，创建对象，把配置文件放到对象里面
		SessionFactory
			SessionFactory sessionFactory=cfg.buildSessionFactory();
			1.使用Configuration对象创建SessionFactory();
				根据核心配置文件中，数据库配置，映射文件配置，在数据库创建表，需要配置hibernate.hbm2ddl.auto=true
			2.这个过程非常耗资源
				建议一个项目创建一个sessionFactiry对象
			3.2的实现可以把Configuration与SessionFactory抽取成一个工具类，放入一个静态代码块，然后用一个静态方法返回sessionFactory;
		Session
			1.session类似jdbc中的连接
			2.调用session中不同的方法实现crud
				添加——save()
				修改——update()
				删除——delete()
				根据id查询——get()
			3.session为单线程对象(不能共用)
		Transaction
			Transaction tx=session.beginTransaction();
			tx.commit();
			tx.rollback();
			
	配置文件没有提示信息问题
		1.联网
		2.把约束文件引入eclipse中
			window——preferences——搜索xml c——在配置文件中复制一句话（http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd）——add——key types选择uri，key为上一步复制地址,location为本地的dtd文件所在位置——点ok完成——重启eclipse